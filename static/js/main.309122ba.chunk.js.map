{"version":3,"sources":["config/mock.js","config/api.js","api.js","context/app.js","components/Destination.js","components/Comment.js","components/ProductPreview.js","views/Home.js","views/CreateRecomendation.js","config/app.js","App.js","serviceWorker.js","index.js"],"names":["mockProducts","id","barcode","name","desciption","image","comments","text","localization","parts","destination","DESTINATIONS","color","link","API_BASE_URL","process","REACT_APP_SHIPMENT_API_URL","axios","Axios","create","baseURL","headers","sleep","time","Promise","resolve","setTimeout","fetchProducts","a","get","data","AppContext","React","createContext","useContext","AppProviderRouter","withRouter","props","useState","products","setProducts","product","setProduct","loadProducts","Provider","value","destinationId","styles","useStyles","find","Grid","container","item","xs","className","label","style","backgroundColor","justify","alignItems","Typography","variant","Button","href","makeStyles","theme","borderRadius","width","height","margin","comment","map","p","key","Destination","media","padding","history","showComments","showAddRecomendation","showBack","showSeeRecomendation","Card","Icon","onClick","push","CardMedia","CardContent","length","align","Comment","Home","useEffect","root","direction","mt","size","Autocomplete","options","getOptionLabel","option","fullWidth","onChange","event","renderInput","params","TextField","marginTop","destinations","setDestinations","d","i","APP_PREFIX_URL","REACT_APP_PREFIX","App","basename","Container","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4TAAaA,EAAe,CAC1B,CACEC,GAAI,EACJC,QAAS,EACTC,KAAM,WACNC,WACE,iEACFC,MACE,wFACFC,SAAU,CACR,CACEC,KAAM,eACNC,aAAc,oBACdC,MAAO,CACL,CACEF,KAAM,uBACNG,YAAa,mBAEf,CACEH,KAAM,aACNG,YAAa,qBAEf,CACEH,KAAM,sBACNG,YAAa,uBAMvB,CACET,GAAI,EACJC,QAAS,EACTC,KAAM,MACNC,WAAY,MACZC,MACE,gGACFC,SAAU,CACR,CACEC,KAAM,eACNC,aAAc,oBACdC,MAAO,CACL,CACEF,KAAM,uBACNG,YAAa,mBAEf,CACEH,KAAM,aACNG,YAAa,yBAMvB,CACET,GAAI,EACJC,QAAS,EACTC,KAAM,SACNC,WAAY,SACZC,MAAO,qCACPC,SAAU,CACR,CACEC,KAAM,eACNC,aAAc,oBACdC,MAAO,CACL,CACEF,KAAM,uBACNG,YAAa,mBAEf,CACEH,KAAM,aACNG,YAAa,sBAQZC,EAAe,CAC1B,CACEV,GAAI,kBACJE,KAAM,iBACNS,MAAO,qBAET,CACEX,GAAI,oBACJE,KAAM,kBACNS,MAAO,oBAET,CACEX,GAAI,gBACJE,KAAM,gBACNS,MAAO,gBAET,CACEX,GAAI,kBACJE,KAAM,SACNS,MAAO,oBACPC,KACE,uGCpGOC,EAAeC,mHAAYC,4BAA8B,GCKhEC,EAAQC,IAAMC,OAAO,CACzBC,QAASN,EACTO,QAAS,CACP,eAAgB,sBAKdC,EAAQ,SAAAC,GAAI,OAAI,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,OAE1D,SAAeI,IAAtB,+B,4CAAO,8BAAAC,EAAA,0DACDd,EADC,gCAEoBG,EAAMY,IAAN,aAFpB,uBAEKC,EAFL,EAEKA,KAFL,kBAGIA,GAHJ,wBAKGR,EAAM,GALT,iCAMItB,GANJ,6C,sBCXP,IAAM+B,EAAaC,IAAMC,gBA6BzB,IAAMC,EAAa,kBAAMF,IAAME,WAAWH,IAEpCI,EAAoBC,aA7B1B,SAAqBC,GAAQ,IAAD,EACcL,IAAMM,SAC5C,2BAFwB,mBACnB9B,EADmB,aAKMwB,IAAMM,SAAS,KALrB,mBAKnBC,EALmB,KAKTC,EALS,OAOIR,IAAMM,SAAS,CAAEhC,SAAU,KAP/B,mBAOnBmC,EAPmB,KAOVC,EAPU,KASpBC,EAAY,uCAAG,sBAAAf,EAAA,kEACnBY,EADmB,SACDb,IADC,6EAAH,qDAIlB,OACE,kBAACI,EAAWa,SAAZ,eACEC,MAAO,CACLrC,eACA+B,WACAI,eACAF,UACAC,eAEEL,OCvBK,cAA8B,IAA3B9B,EAA0B,EAA1BA,KAAMuC,EAAoB,EAApBA,cAChBC,EAASC,IAETtC,EAAcC,EAAasC,MAAK,qBAAGhD,KAAgB6C,MAAkB,GAC3E,OACE,kBAACI,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,yBACEC,UAAWP,EAAOQ,MAClBC,MAAO,CAAEC,gBAAiB/C,EAAYE,OAAS,YAGnD,kBAACsC,EAAA,EAAD,CACEE,MAAI,EACJD,WAAS,EACTO,QAAQ,SACRF,MAAO,CAAEG,WAAY,UACrBN,GAAI,IAEJ,kBAACO,EAAA,EAAD,CAAYC,QAAQ,MAAMtD,IAE5B,kBAAC2C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACS,EAAA,EAAD,CAAQD,QAAQ,WAAWE,KAAMrD,EAAYG,MAC1CH,EAAYP,SAOjB6C,EAAYgB,aAAW,SAAAC,GAAK,MAAK,CACrCV,MAAO,CACLW,aAAc,OACdC,MAAO,OACPC,OAAQ,OACRC,OAAQ,YCnCG,cAAkB,IAAfC,EAAc,EAAdA,QAChB,OACE,kBAACpB,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACO,EAAA,EAAD,CAAYC,QAAQ,aAAaS,EAAQ/D,OAE1C+D,EAAQ7D,MAAM8D,KAAI,SAAAC,GAAC,OAClB,kBAACtB,EAAA,EAAD,CAAMuB,IAAKD,EAAEvE,GAAImD,MAAI,EAACC,GAAI,IACxB,kBAACqB,EAAD,CAAanE,KAAMiE,EAAEjE,KAAMuC,cAAe0B,EAAE9D,oBCqEhDsC,EAAYgB,aAAW,SAAAC,GAAK,MAAK,CACrCU,MAAO,CACLR,MAAO,OACPC,OAAQ,QAEVI,EAAG,CACDI,QAAS,YAIExC,eAjFQ,SAAC,GAMjB,IALLyC,EAKI,EALJA,QAKI,IAJJC,oBAII,aAHJC,4BAGI,aAFJC,gBAEI,aADJC,4BACI,SACElC,EAASC,IADX,EAE4Bd,IAAxBO,EAFJ,EAEIA,QAASC,EAFb,EAEaA,WAWjB,OAAOD,GAAWA,EAAQtC,KACxB,kBAAC+E,EAAA,EAAD,CAAM5B,UAAWP,EAAOyB,GACtB,kBAACtB,EAAA,EAAD,CAAMC,WAAS,GACZ6B,GACC,kBAAC9B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAAC8B,EAAA,EAAD,CAAMC,QAVG,WACjBP,EAAQQ,KAAK,KACb3C,EAAW,QAQH,wBAGJ,kBAACQ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACO,EAAA,EAAD,CAAYC,QAAQ,MAAMpB,EAAQtC,OAEpC,kBAAC+C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACiC,EAAA,EAAD,CAAWhC,UAAWP,EAAO4B,MAAOtE,MAAOoC,EAAQpC,SAErD,kBAAC6C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACkC,EAAA,EAAD,KACE,kBAAC3B,EAAA,EAAD,CAAYC,QAAQ,aAAapB,EAAQrC,cAG7C,kBAAC8C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZ,IACD,kBAACO,EAAA,EAAD,CAAYC,QAAQ,aAApB,UAAoCpB,EAAQnC,SAASkF,OAArD,0BAEDP,GACC,kBAAC/B,EAAA,EAAD,CAAME,MAAI,EAACqC,MAAM,SAASnC,UAAWP,EAAOyB,EAAGnB,GAAI,IACjD,kBAACS,EAAA,EAAD,CACElD,MAAM,YACNiD,QAAQ,YACRuB,QArCc,WACxBP,EAAQQ,KAAK,cAiCL,uBASHP,GAAgB,kBAACY,EAAD,CAASpB,QAAS7B,EAAQnC,SAAS,KACnDyE,GACC,kBAAC7B,EAAA,EAAD,CAAME,MAAI,EAACqC,MAAM,SAASnC,UAAWP,EAAOyB,EAAGnB,GAAI,IACjD,kBAACS,EAAA,EAAD,CACEsB,QAAS,kBAAMP,EAAQQ,KAAK,sBAC5BxB,QAAQ,WACRjD,MAAM,YACN0C,UAAWP,EAAOyB,GAJpB,wBAYN,QCvEOmB,EAAO,WAClB,IAAM5C,EAASC,IADS,EAEgCd,IAAhDS,EAFgB,EAEhBA,aAAcJ,EAFE,EAEFA,SAAUG,EAFR,EAEQA,WAAYD,EAFpB,EAEoBA,QAE5CT,IAAM4D,WAAU,WACdjD,MACC,IAMH,OACE,yBAAKW,UAAWP,EAAO8C,MACrB,kBAAC3C,EAAA,EAAD,CAAMC,WAAS,EAAC2C,UAAU,SAASnC,WAAW,UAC5C,kBAACT,EAAA,EAAD,CAAMI,UAAWP,EAAOgD,GAAI3C,MAAI,GAC9B,kBAACQ,EAAA,EAAD,CAAYC,QAAQ,MAApB,sBAEF,kBAACX,EAAA,EAAD,CAAMI,UAAWP,EAAOgD,GAAI3C,MAAI,GAC9B,kBAACU,EAAA,EAAD,CAAQkC,KAAK,QAAQpF,MAAM,UAAUiD,QAAQ,YAA7C,iBAIF,kBAACX,EAAA,EAAD,CAAMI,UAAWP,EAAOgD,GAAI3C,MAAI,GAC9B,kBAACQ,EAAA,EAAD,CAAYC,QAAQ,MAApB,OAEF,kBAACX,EAAA,EAAD,CAAMI,UAAWP,EAAOgD,GAAI3C,MAAI,EAACC,GAAI,IACnC,yBAAKG,MAAO,CAAEW,MAAO,UACnB,kBAAC8B,EAAA,EAAD,CACEC,QAAS3D,EACT4D,eAAgB,SAAAC,GAAM,OAAIA,EAAOjG,MACjCF,GAAG,QACHoG,WAAS,EACTC,SAzBa,SAACC,EAAO/B,GAC/B9B,EAAW8B,IAyBDgC,YAAa,SAAAC,GAAM,OACjB,kBAACC,EAAA,EAAD,iBAAeD,EAAf,CAAuBlD,MAAM,uBAKrC,kBAACL,EAAA,EAAD,CAAME,MAAI,EAACE,UAAWP,EAAOgD,GAAI1C,GAAI,IACnC,kBAAC,EAAD,CAAgB4B,sBAAoB,EAACD,UAAQ,EAACvC,QAASA,QAO3DO,EAAYgB,aAAW,SAAAC,GAAK,MAAK,CACrC4B,KAAM,CACJ,mBAAoB,IAEtBE,GAAI,CACFY,UAAW,Y,QCCT3D,EAAYgB,aAAW,SAAAC,GAAK,MAAK,MAExB7B,eAnDa,SAAC,GAAgB,EAAdyC,QACd7B,IAD6B,IAEpCP,EAAYP,IAAZO,QAFmC,EAGHT,IAAMM,SAAS,IAHZ,mBAGpCsE,EAHoC,KAGtBC,EAHsB,KAS3C,OAAOpE,GAAWA,EAAQtC,KACxB,kBAAC+C,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAAC,EAAD,CAAgB2B,UAAQ,KAEzB4B,EAAarC,KAAI,SAACuC,EAAGC,GAAJ,OAChB,kBAAC7D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,yBAAKG,MAAO,CAAEW,MAAO,QAASE,OAAQ,SACpC,kBAACa,EAAA,EAAD,KACE,kBAACK,EAAA,EAAD,KACE,kBAACmB,EAAA,EAAD,CAAWnD,MAAM,kBACjB,kBAAC0C,EAAA,EAAD,CACEC,QAASvF,EACTwF,eAAgB,SAAAC,GAAM,OAAIA,EAAOjG,MACjCkG,WAAS,EAETG,YAAa,SAAAC,GAAM,OACjB,kBAACC,EAAA,EAAD,iBAAeD,EAAf,CAAuBlD,MAAM,oCAQ3C,kBAACL,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACS,EAAA,EAAD,CAAQsB,QA9Bc,WAC1ByB,EAAgB,GAAD,mBAAKD,GAAL,CAAmB,QA8B3B,IACD,kBAACzB,EAAA,EAAD,YAFF,sBAKF,kBAACjC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACS,EAAA,EAAD,CAAQlD,MAAM,YAAYiD,QAAQ,YAAlC,YAKF,Q,SC3DOmD,EAAiBjG,mHAAYkG,kBAAoB,GCmC/CC,MAxBf,WACE,OACE,kBAAC,IAAD,CAAQC,SAAUH,GAChB,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAACI,EAAA,EAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW5B,IACjC,kBAAC,IAAD,CACE0B,KAAK,WACLE,UAAW,kBACT,kBAAC,EAAD,CAAgBzC,cAAY,EAACE,UAAQ,EAACD,sBAAoB,OAG9D,kBAAC,IAAD,CACEsC,KAAK,oBACLE,UAAW,kBAAM,kBAAC,EAAD,cCdXC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.309122ba.chunk.js","sourcesContent":["export const mockProducts = [\n  {\n    id: 1,\n    barcode: 1,\n    name: \"Acidolit\",\n    desciption:\n      \"Acidolit (bez smaku) proszek do przyg. rozt. doust. x 10 sasz.\",\n    image:\n      \"https://www.apteka-melissa.pl/produkty_zdjecia/acidolit-o-smaku-jablkowym-10-sasz.jpg\",\n    comments: [\n      {\n        text: \"long comment\",\n        localization: \"pl_warsaw_powisle\",\n        parts: [\n          {\n            text: \"Opakowanie z kartonu\",\n            destination: \"paper_pl_warsaw\"\n          },\n          {\n            text: \"Kryszeczka\",\n            destination: \"plastic_pl_warsaw\"\n          },\n          {\n            text: \"Przeterminowany lek\",\n            destination: \"drugstore_type1\"\n          }\n        ]\n      }\n    ]\n  },\n  {\n    id: 2,\n    barcode: 2,\n    name: \"Sok\",\n    desciption: \"Sok\",\n    image:\n      \"https://arkanasmaku.pl/environment/cache/images/500_500_productGfx_44114/SW_3L_pomarancza.jpg\",\n    comments: [\n      {\n        text: \"long comment\",\n        localization: \"pl_warsaw_powisle\",\n        parts: [\n          {\n            text: \"Opakowanie z kartonu\",\n            destination: \"paper_pl_warsaw\"\n          },\n          {\n            text: \"Kryszeczka\",\n            destination: \"plastic_pl_warsaw\"\n          }\n        ]\n      }\n    ]\n  },\n  {\n    id: 3,\n    barcode: 3,\n    name: \"Yogurt\",\n    desciption: \"Yogurt\",\n    image: \"https://eoreco.pl/img/259457/1.jpg\",\n    comments: [\n      {\n        text: \"long comment\",\n        localization: \"pl_warsaw_powisle\",\n        parts: [\n          {\n            text: \"Opakowanie z kartonu\",\n            destination: \"paper_pl_warsaw\"\n          },\n          {\n            text: \"Kryszeczka\",\n            destination: \"mix_pl_warsaw\"\n          }\n        ]\n      }\n    ]\n  }\n];\n\nexport const DESTINATIONS = [\n  {\n    id: \"paper_pl_warsaw\",\n    name: \"Kosz papierowy\",\n    color: \"rgb(17, 141, 193)\"\n  },\n  {\n    id: \"plastic_pl_warsaw\",\n    name: \"Kosz plastykowy\",\n    color: \"rgb(254, 191, 9)\"\n  },\n  {\n    id: \"mix_pl_warsaw\",\n    name: \"Kosz mieszany\",\n    color: \"rgb(1, 1, 1)\"\n  },\n  {\n    id: \"drugstore_type1\",\n    name: \"Apteka\",\n    color: \"rgb(87, 182, 213)\",\n    link:\n      \"https://www.google.com/maps/search/apteka+warszawa/@52.2285811,20.9629607,12.28z/data=!4m2!2m1!6e2\"\n  }\n];\n\n// // DB STRUCTURE\n// Product\n//     id:IntegerField\n//     name : TextField\n//     image: TextField\n//     desciption : TextField\n\n// getProduct(id):\n//     return Post.objects.all(id=id)\n\n// addComment:\n//     Product.comments.extend(Comment('text','pl_warsaw_powisle','papier_pl_warsaw_powisle','aptek_type1'))\n\n// Comment\n//     product: ForgeinKey(Product)\n//     text : TextField\n//     localization : TextField ('pl_warsaw_powisle')\n//     parts: ListField(EmbeddedModelField('Comment'))\n\n// Parts\n//     comment: ForgeinKey(Comment)\n//     text: TextField\n//     desciption: TextField\n//     destination: TextField\n","export const API_BASE_URL = process.env.REACT_APP_SHIPMENT_API_URL || \"\";\n","import Axios from \"axios\";\nimport { mockProducts } from \"./config/mock\";\n\nimport { API_BASE_URL } from \"./config/api\";\n\nconst axios = Axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n//for mocking api\nconst sleep = time => new Promise(resolve => setTimeout(resolve, time));\n\nexport async function fetchProducts() {\n  if (API_BASE_URL) {\n    const { data } = await axios.get(`/products`);\n    return data;\n  } else {\n    await sleep(1);\n    return mockProducts;\n  }\n}\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { fetchProducts } from \"../api\";\n\nconst AppContext = React.createContext();\n\nfunction AppProvider(props) {\n  const [localization, setLocalization] = React.useState(\n    \"pl_warsaw_sriodmiejscie\"\n  );\n\n  const [products, setProducts] = React.useState([]);\n\n  const [product, setProduct] = React.useState({ comments: [] });\n\n  const loadProducts = async () => {\n    setProducts(await fetchProducts());\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        localization,\n        products,\n        loadProducts,\n        product,\n        setProduct\n      }}\n      {...props}\n    />\n  );\n}\n\nconst useContext = () => React.useContext(AppContext);\n\nconst AppProviderRouter = withRouter(AppProvider);\n\nexport { useContext, AppProviderRouter as AppProvider };\n","import React from \"react\";\nimport { Grid, Typography, Button } from \"@material-ui/core\";\nimport { DESTINATIONS } from \"../config/mock\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default ({ text, destinationId }) => {\n  const styles = useStyles();\n\n  const destination = DESTINATIONS.find(({ id }) => id === destinationId) || {};\n  return (\n    <Grid container>\n      <Grid item xs={2}>\n        <div\n          className={styles.label}\n          style={{ backgroundColor: destination.color || \"white\" }}\n        />\n      </Grid>\n      <Grid\n        item\n        container\n        justify=\"center\"\n        style={{ alignItems: \"center\" }}\n        xs={10}\n      >\n        <Typography variant=\"h6\">{text}</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Button variant=\"outlined\" href={destination.link}>\n          {destination.name}\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  label: {\n    borderRadius: \"100%\",\n    width: \"2rem\",\n    height: \"2rem\",\n    margin: \"1rem\"\n  }\n}));\n","import React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport Destination from \"./Destination\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nexport default ({ comment }) => {\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Typography variant=\"subtitle1\">{comment.text}</Typography>\n      </Grid>\n      {comment.parts.map(p => (\n        <Grid key={p.id} item xs={12}>\n          <Destination text={p.text} destinationId={p.destination} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport { Typography, Button, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Icon } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport { useContext } from \"../context/app\";\nimport Comment from \"./Comment\";\n\nconst ProductPreview = ({\n  history,\n  showComments = false,\n  showAddRecomendation = false,\n  showBack = false,\n  showSeeRecomendation = false\n}) => {\n  const styles = useStyles();\n  const { product, setProduct } = useContext();\n\n  const handleShowProduct = () => {\n    history.push(\"/product\");\n  };\n\n  const handleBack = () => {\n    history.push(\"/\");\n    setProduct(null);\n  };\n\n  return product && product.name ? (\n    <Card className={styles.p}>\n      <Grid container>\n        {showBack && (\n          <Grid item xs={12}>\n            <Icon onClick={handleBack}>keyboard_arrow_left</Icon>\n          </Grid>\n        )}\n        <Grid item xs={12}>\n          <Typography variant=\"h3\">{product.name}</Typography>\n        </Grid>\n        <Grid item xs={5}>\n          <CardMedia className={styles.media} image={product.image} />\n        </Grid>\n        <Grid item xs={7}>\n          <CardContent>\n            <Typography variant=\"subtitle1\">{product.desciption}</Typography>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12}>\n          {\" \"}\n          <Typography variant=\"subtitle2\">{`${product.comments.length} comments availible.`}</Typography>\n        </Grid>\n        {showSeeRecomendation && (\n          <Grid item align=\"center\" className={styles.p} xs={12}>\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              onClick={handleShowProduct}\n            >\n              See recomendations\n            </Button>\n          </Grid>\n        )}\n        {showComments && <Comment comment={product.comments[0]} />}\n        {showAddRecomendation && (\n          <Grid item align=\"center\" className={styles.p} xs={12}>\n            <Button\n              onClick={() => history.push(\"/addRecomendation\")}\n              variant=\"outlined\"\n              color=\"secondary\"\n              className={styles.p}\n            >\n              Add recomendation\n            </Button>\n          </Grid>\n        )}\n      </Grid>\n    </Card>\n  ) : null;\n};\n\nconst useStyles = makeStyles(theme => ({\n  media: {\n    width: \"9rem\",\n    height: \"9rem\"\n  },\n  p: {\n    padding: \"1rem\"\n  }\n}));\n\nexport default withRouter(ProductPreview);\n","import React from \"react\";\nimport { Button, Grid, TextField, Typography } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ProductPreview from \"../components/ProductPreview\";\n\nimport { useContext } from \"../context/app\";\n\nexport const Home = () => {\n  const styles = useStyles();\n  const { loadProducts, products, setProduct, product } = useContext();\n\n  React.useEffect(() => {\n    loadProducts();\n  }, []);\n\n  const handleSetProduct = (event, p) => {\n    setProduct(p);\n  };\n\n  return (\n    <div className={styles.root}>\n      <Grid container direction=\"column\" alignItems=\"center\">\n        <Grid className={styles.mt} item>\n          <Typography variant=\"h5\">Welcome to Mr.Bin</Typography>\n        </Grid>\n        <Grid className={styles.mt} item>\n          <Button size=\"large\" color=\"primary\" variant=\"outlined\">\n            Scan barcode\n          </Button>\n        </Grid>\n        <Grid className={styles.mt} item>\n          <Typography variant=\"h6\">OR</Typography>\n        </Grid>\n        <Grid className={styles.mt} item xs={12}>\n          <div style={{ width: \"16rem\" }}>\n            <Autocomplete\n              options={products}\n              getOptionLabel={option => option.name}\n              id=\"debug\"\n              fullWidth\n              onChange={handleSetProduct}\n              renderInput={params => (\n                <TextField {...params} label=\"Enter a name\" />\n              )}\n            />\n          </div>\n        </Grid>\n        <Grid item className={styles.mt} xs={12}>\n          <ProductPreview showSeeRecomendation showBack product={product} />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"&  .MuiGrid-item\": {}\n  },\n  mt: {\n    marginTop: \"2rem\"\n  }\n}));\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport { Typography, Button, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Icon } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport { useContext } from \"../context/app\";\nimport ProductPreview from \"../components/ProductPreview\";\nimport { DESTINATIONS } from \"../config/mock\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nconst CreateRecomendation = ({ history }) => {\n  const styles = useStyles();\n  const { product } = useContext();\n  const [destinations, setDestinations] = React.useState([]);\n\n  const addDestinationField = () => {\n    setDestinations([...destinations, {}]);\n  };\n\n  return product && product.name ? (\n    <Grid container>\n      <Grid item xs={12}>\n        <ProductPreview showBack />\n      </Grid>\n      {destinations.map((d, i) => (\n        <Grid item xs={12}>\n          <div style={{ width: \"18rem\", margin: \"1rem\" }}>\n            <Card>\n              <CardContent>\n                <TextField label=\"Enter comment\" />\n                <Autocomplete\n                  options={DESTINATIONS}\n                  getOptionLabel={option => option.name}\n                  fullWidth\n                  //onChange={(e, v) => handleSetDestination(i, v.id)}\n                  renderInput={params => (\n                    <TextField {...params} label=\"Choose a destination\" />\n                  )}\n                />\n              </CardContent>\n            </Card>\n          </div>\n        </Grid>\n      ))}\n      <Grid item xs={12}>\n        <Button onClick={addDestinationField}>\n          {\" \"}\n          <Icon>add</Icon> Add ddestination\n        </Button>\n      </Grid>\n      <Grid item xs={12}>\n        <Button color=\"secondary\" variant=\"outlined\">\n          Submit\n        </Button>\n      </Grid>\n    </Grid>\n  ) : null;\n};\n\nconst useStyles = makeStyles(theme => ({}));\n\nexport default withRouter(CreateRecomendation);\n","export const APP_PREFIX_URL = process.env.REACT_APP_PREFIX || \"\";\n","import React from \"react\";\nimport { Route, Switch, HashRouter as Router } from \"react-router-dom\";\n\nimport { Home } from \"./views/Home\";\nimport ProductPreview from \"./components/ProductPreview\";\nimport CreateRecomendation from \"./views/CreateRecomendation\";\nimport { Container } from \"@material-ui/core\";\n\nimport { AppProvider } from \"./context/app\";\nimport { APP_PREFIX_URL } from \"./config/app\";\n\nfunction App() {\n  return (\n    <Router basename={APP_PREFIX_URL}>\n      <AppProvider>\n        <Switch>\n          <Container>\n            <Route path=\"/\" exact component={Home} />\n            <Route\n              path=\"/product\"\n              component={() => (\n                <ProductPreview showComments showBack showAddRecomendation />\n              )}\n            />\n            <Route\n              path=\"/addRecomendation\"\n              component={() => <CreateRecomendation />}\n            />\n          </Container>\n        </Switch>\n      </AppProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}